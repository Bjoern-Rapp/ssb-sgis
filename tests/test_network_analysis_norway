#%%
import geopandas as gpd

import gis_utils as gs
import cProfile
"""
from tests.test_od_cost_matrix import test_od_cost_matrix
from tests.test_shortest_path import test_shortest_path
from tests.test_service_area import test_service_area
"""

def not_test_network_analysis_norway(nw):

    p = gpd.read_parquet(r"C:\Users\ort\OneDrive - Statistisk sentralbyr책\data\tilfeldige_adresser_1000.parquet")
    p["idx"] = p.index
    p["idx2"] = p.index

    test_shortest_path()
    test_service_area()
    test_od_cost_matrix()


def main():

    #r = gpd.read_parquet(r"C:/Users/ort/OneDrive - Statistisk sentralbyr책/data/vegdata/veger_landet_2022.parquet")
    r = gpd.read_parquet(r"C:/Users/ort/OneDrive - Statistisk sentralbyr책/data/vegdata/veger_oslo_og_naboer_2022.parquet")
    r.loc[r.municipality.astype(int)==301].to_parquet(r"C:/Users/ort/OneDrive - Statistisk sentralbyr책/data/vegdata/veger_oslo_2022.parquet")
    r = r.to_crs(25833)

    nw = (
        gs.DirectedNetwork(r)
        .make_directed_network_norway()
        .remove_isolated()
    )

    nwa = gs.NetworkAnalysis(nw, cost="minutes")

    not_test_network_analysis_norway(nwa)


if __name__ == "__main__":
    cProfile.run("main()", sort="cumtime")
